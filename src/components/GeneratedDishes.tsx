import React, { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Share2, Table, Grid } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { toast } from 'sonner';

interface GeneratedDish {
  name: string;
  description: string;
}

interface GeneratedDishesProps {
  dishes: GeneratedDish[];
  isLoading?: boolean;
}

export const GeneratedDishes: React.FC<GeneratedDishesProps> = ({ dishes, isLoading }) => {
  const [viewMode, setViewMode] = useState<'cards' | 'table'>('table');

  const handleShare = (dishName: string) => {
    if (navigator.share) {
      navigator.share({
        title: `Check out this ${dishName}!`,
        text: `Look at this amazing ${dishName} generated by Menu Magic!`,
      });
    } else {
      navigator.clipboard.writeText(`Check out this ${dishName}!`);
      toast.success('Copied to clipboard!');
    }
  };

  if (isLoading) {
    return (
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {[...Array(6)].map((_, i) => (
          <Card key={i} className="gradient-card shadow-card">
            <div className="p-6 space-y-4">
              <div className="aspect-square bg-muted rounded-lg animate-pulse" />
              <div className="space-y-2">
                <div className="h-4 bg-muted rounded animate-pulse" />
                <div className="h-3 bg-muted rounded w-2/3 animate-pulse" />
              </div>
            </div>
          </Card>
        ))}
      </div>
    );
  }

  if (dishes.length === 0) {
    return (
      <div className="text-center py-12">
        <div className="gradient-card rounded-xl p-8 shadow-card">
          <p className="text-muted-foreground text-lg">
            Upload a menu and click "Generate Magic" to see stunning dish visuals here!
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-3xl font-bold gradient-primary bg-clip-text text-transparent">
          Extracted Menu Dishes
        </h2>
        <p className="text-muted-foreground mt-2">
          {dishes.length} {dishes.length === 1 ? 'dish' : 'dishes'} found on your menu
        </p>
        
        {/* View Toggle */}
        <div className="flex justify-center gap-2 mt-4">
          <Button
            variant={viewMode === 'cards' ? 'default' : 'outline'}
            size="sm"
            onClick={() => setViewMode('cards')}
          >
            <Grid className="h-4 w-4 mr-2" />
            Cards
          </Button>
          <Button
            variant={viewMode === 'table' ? 'default' : 'outline'}
            size="sm"
            onClick={() => setViewMode('table')}
          >
            <Table className="h-4 w-4 mr-2" />
            Table
          </Button>
        </div>
      </div>

      {viewMode === 'table' ? (
        // Table View
        <div className="gradient-card rounded-xl p-6 shadow-card overflow-hidden">
          <div className="overflow-x-auto">
            <table className="w-full border-collapse">
              <thead>
                <tr className="border-b border-border">
                  <th className="text-left py-3 px-4 font-semibold text-primary">#</th>
                  <th className="text-left py-3 px-4 font-semibold text-primary">Dish Information</th>
                  <th className="text-center py-3 px-4 font-semibold text-primary">Actions</th>
                </tr>
              </thead>
              <tbody>
                {dishes.map((dish, index) => (
                  <React.Fragment key={`${dish.name}-${index}`}>
                    {/* Dish Name Row */}
                    <tr className="border-b border-border/30 hover:bg-muted/20 transition-colors">
                      <td className="py-3 px-4 text-muted-foreground font-mono" rowSpan={2}>
                        {String(index + 1).padStart(2, '0')}
                      </td>
                      <td className="py-3 px-4">
                        <div className="font-semibold text-primary text-lg">
                          üçΩÔ∏è {dish.name}
                        </div>
                      </td>
                      <td className="py-3 px-4 text-center" rowSpan={2}>
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() => handleShare(dish.name)}
                          className="text-muted-foreground hover:text-primary"
                        >
                          <Share2 className="h-4 w-4" />
                        </Button>
                      </td>
                    </tr>
                    {/* Description Row */}
                    <tr className="border-b border-border/50 hover:bg-muted/20 transition-colors">
                      <td className="py-3 px-4 pl-8">
                        <div className="text-muted-foreground text-sm italic">
                          {dish.description ? `"${dish.description}"` : "No description available"}
                        </div>
                      </td>
                    </tr>
                  </React.Fragment>
                ))}
              </tbody>
            </table>
          </div>
          
          {/* Table Summary */}
          <div className="mt-6 pt-4 border-t border-border/50">
            <div className="flex justify-between items-center text-sm text-muted-foreground">
              <span>Total dishes: {dishes.length}</span>
              <span>
                Dishes with descriptions: {dishes.filter(d => d.description && d.description.trim()).length}
              </span>
            </div>
          </div>
        </div>
      ) : (
        // Cards View (existing)
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {dishes.map((dish, index) => (
            <Card 
              key={`${dish.name}-${index}`} 
              className="gradient-card shadow-card hover:shadow-primary transition-all duration-300 hover:scale-105 group overflow-hidden"
              style={{ animationDelay: `${index * 0.1}s` }}
            >
              <div className="p-6 space-y-4">
                <div className="text-center">
                  <div className="gradient-primary rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center">
                    <span className="text-2xl">üçΩÔ∏è</span>
                  </div>
                  <h3 className="font-semibold text-xl text-primary mb-2">
                    {dish.name}
                  </h3>
                  <p className="text-muted-foreground text-sm">
                    {dish.description || "Delicious dish from your menu"}
                  </p>
                </div>
                
                <div className="flex items-center justify-center pt-4">
                  <Button
                    variant="hero"
                    size="sm"
                    onClick={() => handleShare(dish.name)}
                    className="w-full"
                  >
                    <Share2 className="h-4 w-4" />
                    Share Dish
                  </Button>
                </div>
              </div>
            </Card>
          ))}
        </div>
      )}
    </div>
  );
};