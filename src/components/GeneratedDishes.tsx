import React from 'react';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Download, Heart, Share2 } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { toast } from 'sonner';

interface GeneratedDish {
  id: string;
  name: string;
  imageUrl: string;
  description: string;
  price: string;
}

interface GeneratedDishesProps {
  dishes: GeneratedDish[];
  isLoading?: boolean;
}

export const GeneratedDishes: React.FC<GeneratedDishesProps> = ({ dishes, isLoading }) => {
  const handleDownload = async (imageUrl: string, dishName: string) => {
    try {
      const response = await fetch(imageUrl);
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.style.display = 'none';
      a.href = url;
      a.download = `${dishName.replace(/\s+/g, '_')}.jpg`;
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      toast.success('Image downloaded successfully!');
    } catch (error) {
      toast.error('Failed to download image');
    }
  };

  const handleShare = (dishName: string) => {
    if (navigator.share) {
      navigator.share({
        title: `Check out this ${dishName}!`,
        text: `Look at this amazing ${dishName} generated by Menu Magic!`,
      });
    } else {
      navigator.clipboard.writeText(`Check out this ${dishName}!`);
      toast.success('Copied to clipboard!');
    }
  };

  if (isLoading) {
    return (
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {[...Array(6)].map((_, i) => (
          <Card key={i} className="gradient-card shadow-card">
            <div className="p-6 space-y-4">
              <div className="aspect-square bg-muted rounded-lg animate-pulse" />
              <div className="space-y-2">
                <div className="h-4 bg-muted rounded animate-pulse" />
                <div className="h-3 bg-muted rounded w-2/3 animate-pulse" />
              </div>
            </div>
          </Card>
        ))}
      </div>
    );
  }

  if (dishes.length === 0) {
    return (
      <div className="text-center py-12">
        <div className="gradient-card rounded-xl p-8 shadow-card">
          <p className="text-muted-foreground text-lg">
            Upload a menu and click "Generate Magic" to see stunning dish visuals here!
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-3xl font-bold gradient-primary bg-clip-text text-transparent">
          Generated Dish Visuals
        </h2>
        <p className="text-muted-foreground mt-2">
          {dishes.length} stunning {dishes.length === 1 ? 'dish' : 'dishes'} transformed by AI
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {dishes.map((dish, index) => (
          <Card 
            key={dish.id} 
            className="gradient-card shadow-card hover:shadow-primary transition-all duration-300 hover:scale-105 group overflow-hidden"
            style={{ animationDelay: `${index * 0.1}s` }}
          >
            <div className="relative">
              <img
                src={dish.imageUrl}
                alt={dish.name}
                className="w-full aspect-square object-cover transition-transform duration-300 group-hover:scale-110"
              />
              <div className="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
              
              <div className="absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                <div className="flex gap-2">
                  <Button
                    size="sm"
                    variant="secondary"
                    className="bg-white/90 hover:bg-white"
                    onClick={() => handleShare(dish.name)}
                  >
                    <Share2 className="h-4 w-4" />
                  </Button>
                  <Button
                    size="sm"
                    variant="secondary"
                    className="bg-white/90 hover:bg-white"
                    onClick={() => handleDownload(dish.imageUrl, dish.name)}
                  >
                    <Download className="h-4 w-4" />
                  </Button>
                </div>
              </div>
            </div>
            
            <div className="p-6 space-y-3">
              <div className="flex items-start justify-between">
                <div>
                  <h3 className="font-semibold text-lg text-primary line-clamp-1">
                    {dish.name}
                  </h3>
                  <p className="text-muted-foreground text-sm mt-1 line-clamp-2">
                    {dish.description}
                  </p>
                </div>
                <Badge variant="secondary" className="ml-2 font-semibold">
                  {dish.price}
                </Badge>
              </div>
              
              <div className="flex items-center justify-between pt-2">
                <Button
                  variant="ghost"
                  size="sm"
                  className="text-muted-foreground hover:text-primary"
                >
                  <Heart className="h-4 w-4" />
                </Button>
                <Button
                  variant="hero"
                  size="sm"
                  onClick={() => handleDownload(dish.imageUrl, dish.name)}
                >
                  <Download className="h-4 w-4" />
                  Download
                </Button>
              </div>
            </div>
          </Card>
        ))}
      </div>
    </div>
  );
};